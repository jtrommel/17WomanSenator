\documentclass{tufte-book}
\usepackage{graphicx}  % werken met figuren
\usepackage{gensymb} % werken met wetenschappelijke eenheden\usepackage{geometry}
\usepackage{changepage} % http://ctan.org/pkg/changepage
\usepackage[dutch,british]{babel} % instelling van de taal (woordsplitsing, spellingscontrole)
\usepackage[parfill]{parskip} % Paragrafen gescheiden door witte lijn en geen inspringing
\usepackage[font=small,skip=3pt]{caption} % Minder ruimte tussen figuur/table en ondertitel. Ondertitel klein
\usepackage{capt-of}
\usepackage{indentfirst}
\setlength{\parindent}{0.7cm}
\usepackage{enumitem} % Laat enumerate werken met letters
\usepackage{url}
\usepackage{lipsum}
\setkeys{Gin}{width=\linewidth,totalheight=\textheight,keepaspectratio}
% Prints a trailing space in a smart way.
\usepackage{xspace}
\usepackage{hyperref}
\usepackage{amsmath}

\DeclareGraphicsExtensions{.pdf,.png,.jpg}

% Alter some LaTeX defaults for better treatment of figures:
% See p.105 of "TeX Unbound" for suggested values.
% See pp. 199-200 of Lamport's "LaTeX" book for details.
%   General parameters, for ALL pages:
    \renewcommand{\topfraction}{0.9}	% max fraction of floats at top
    \renewcommand{\bottomfraction}{0.9}	% max fraction of floats at bottom
%   Parameters for TEXT pages (not float pages):
    \setcounter{topnumber}{2}
    \setcounter{bottomnumber}{2}
    \setcounter{totalnumber}{4}     % 2 may work better
    \renewcommand{\textfraction}{0.1}	% allow minimal text w. figs
%   Parameters for FLOAT pages (not text pages):
    \renewcommand{\floatpagefraction}{0.8}	% require fuller float pages
% N.B.: floatpagefraction MUST be less than topfraction !!
\setcounter{secnumdepth}{3}

\newcommand{\tthdump}[1]{#1}

\newcommand{\openepigraph}[2]{
  \begin{fullwidth}
  \sffamily\large
    \begin{doublespace}
      \noindent\allcaps{#1}\\ % epigraph
      \noindent\allcaps{#2} % author
    \end{doublespace}
  \end{fullwidth}
}


\usepackage{makeidx}
\makeindex

\title{17 On 3 January 2019, how many U.S. senators will be women?}
\author{Jan Trommelmans}

\begin{document}
\SweaveOpts{concordance=TRUE,prefix.string=WS}
\setkeys{Gin}{width=1.1\marginparwidth} %% Sweave

<<echo=FALSE>>=
library(tidyverse)
library(broom)
library(gridExtra)
@

% Setting the ggplot theme:
<<echo=FALSE>>=
JT.theme <- theme(panel.border = element_rect(fill = NA, colour = "gray10"),
                  panel.background = element_blank(),
                  panel.grid.major = element_line(colour = "gray85"),
                  panel.grid.minor = element_line(colour = "gray85"),
                  panel.grid.major.x = element_line(colour = "gray85"),
                  axis.text = element_text(size = 8 , face = "bold"),
                  axis.title = element_text(size = 9 , face = "bold"),
                  plot.title = element_text(size = 12 , face = "bold"),
                  strip.text = element_text(size = 8 , face = "bold"),
                  strip.background = element_rect(colour = "black"),
                  legend.text = element_text(size = 8),
                  legend.title = element_text(size = 9 , face = "bold"),
                  legend.background = element_rect(fill = "white"),
                  legend.key = element_rect(fill = "white"))
@

% Functions
<<echo=FALSE>>=
round_preserve_sum <- function(x, digits = 0) {
  up <- 10 ^ digits
  x <- x * up
  y <- floor(x)
  indices <- tail(order(x-y), round(sum(x)) - sum(y))
  y[indices] <- y[indices] + 1
  y / up
}
@

<<echo=FALSE>>=
election.ind <- function(prob, N) {
  set.seed(2018)
  
# probability of a win for female candidate vs a man
  pCal <- prob[1]
  pHaw <- prob[2]
  pMass <- prob[3]
  pMich <- prob[4]
  pMinn <- prob[5]
  pMissi <- prob[6]
  pMisso <- prob[7]
  pND <- prob[8]
  pNeva <- prob[9]
  pTenn <- prob[10]

# simulation of the N elections using a binomial distribution
  XCal <- rbinom(N, size=1, prob=pCal)
  XHaw <- rbinom(N, size=1, prob=pHaw)
  XMass <- rbinom(N, size=1, prob=pMass)
  XMich <- rbinom(N, size=1, prob=pMich)
  XMinn <- rbinom(N, size=1, prob=pMinn)
  XMissi <- rbinom(N, size=1, prob=pMissi)
  XMisso <- rbinom(N, size=1, prob=pMisso)
  XND <- rbinom(N, size=1, prob=pND)
  XNeva <- rbinom(N, size=1, prob=pNeva)
  XTenn <- rbinom(N, size=1, prob=pTenn)

# assuming that all election results are independent of each other
  Y <- XCal + XHaw + XMass + XMich +
    XMinn + XMissi + XMisso + 
    XND + XNeva + XTenn
  elec.ind <- data.frame(Cal=XCal, Haw=XHaw, 
                       Mass=XMass, Mich=XMich, 
                       Minn=XMinn, Missi=XMissi, 
                       Misso=XMisso, ND=XND, 
                       Neva=XNeva, Tenn=XTenn, 
                       tot=Y)

# adding the 16 female senators we are sure about
  elec.ind$tot <- elec.ind$tot + 16

# histogram
  plot.fig <- ggplot(data=elec.ind, aes(x=tot)) +
    geom_histogram(aes(y=..density..), position="identity", binwidth=1, colour="Red", fill="Blue", alpha=0.25) +
    scale_x_continuous(breaks= seq(20, 26, by=1),limits = c(20, 27)) +
    scale_y_continuous(limits = c(0, 0.4)) +
    labs(title="Independent races", x="number of female senators", y="density") +
    JT.theme

# table of probabilities
  elec.ind %>% count(tot) %>% mutate(perc=100*n/N) -> result.ind
  result.ind$perc.round <- round_preserve_sum(result.ind$perc,0)

# output
  resultaat.ind <- list(result.ind=result.ind, plot.ind=plot.fig)
  return(resultaat.ind)
}
@

<<echo=FALSE>>=
election.dep1 <- function(prob, N) { 
    set.seed(2018)
  
# probability of a win for female candidate vs a man
  pCal <- prob[1]
  pHaw <- prob[2]
  pMass <- prob[3]
  pMich <- prob[4]
  pMinn <- prob[5]
  pMissi <- prob[6]
  pMisso <- prob[7]
  pND <- prob[8]
  pNeva <- prob[9]
  pTenn <- prob[10]

# simulation of the N elections using a binomial distribution
  XCal <- rbinom(N, size=1, prob=pCal)
  XHaw <- rbinom(N, size=1, prob=pHaw)
  XMass <- rbinom(N, size=1, prob=pMass)
  XMich <- rbinom(N, size=1, prob=pMich)
  XMinn <- rbinom(N, size=1, prob=pMinn)
  XMissi <- rbinom(N, size=1, prob=pMissi)
  XMisso <- rbinom(N, size=1, prob=pMisso)
  XND <- rbinom(N, size=1, prob=pND)
  XNeva <- rbinom(N, size=1, prob=pNeva)
  XTenn <- rbinom(N, size=1, prob=pTenn)

# assuming that all election results are independent of each other
  Y <- XCal + XHaw + XMass + XMich +
    XMinn + XMissi + XMisso + 
    XND + XNeva + XTenn
  elec.ind <- data.frame(Cal=XCal, Haw=XHaw, 
                       Mass=XMass, Mich=XMich, 
                       Minn=XMinn, Missi=XMissi, 
                       Misso=XMisso, ND=XND, 
                       Neva=XNeva, Tenn=XTenn, 
                       tot=Y)

# adding the 16 female senators we are sure about
  elec.ind$tot <- elec.ind$tot + 16
# assuming some dependency: if Heidi Heidkamp wins, than this will lift up McCaskill and Rosen.
  elec.dep <- elec.ind
  for (i in 1:N) {
    if(elec.dep$ND[i] == 1) {
      elec.dep$Misso[i] <- 1
      elec.dep$Tenn[i] <- 1
    }
  }
  elec.dep$tot <- elec.dep$Cal + elec.dep$Haw + elec.dep$Mass +
    elec.dep$Mich + elec.dep$Minn + elec.dep$Missi +
    elec.dep$Misso + elec.dep$ND + elec.dep$Neva +
    elec.dep$Tenn

# adding the 16 female senators we are sure about
  elec.dep$tot <- elec.dep$tot + 16 

# histogram
  plot.fig <- ggplot(data=elec.dep, aes(x=tot)) +
    geom_histogram(aes(y=..density..), position="identity", binwidth=1, colour="Red", fill="Blue", alpha=0.25) +
    scale_x_continuous(breaks= seq(20, 26, by=1), limits = c(20, 27)) +
    scale_y_continuous(limits = c(0, 0.4)) +
    labs(title="Dependent races", x="number of female senators", y="density") +
    JT.theme

# table of probabilities
  elec.dep %>% count(tot) %>% mutate(perc=100*n/N) -> result.dep
  result.dep$perc.round <- round_preserve_sum(result.dep$perc,0)
  
 # output
  resultaat.dep <- list(result.dep=result.dep, plot.dep=plot.fig)
  return(resultaat.dep)
}
@ 

<<echo=FALSE>>=
election.avg1 <- function(prob, N) { 
  ind <- election.ind(prob, N)$result.ind
  dep <- election.dep1(prob, N)$result.dep
  resultaat.avg <- (ind + dep)/2 
  resultaat.avg$perc.round <- round_preserve_sum(resultaat.avg$perc,0)
  return(resultaat.avg)
}
@


\frontmatter
\chapter*{On 3 January 2019, how many U.S. senators will be women?}

\mainmatter
\chapter{On 3 January 2019, how many U.S. senators will be women?}
\section{Situation}
The situation has been described clearly by Khalid Hassan: 

\begin{itemize}
  \item There are 23 female senators at present: 10 of them are safe because they are not up for election, 13 are.
  \item Of these 13, 5 are in elections where the candidates of both parties (Dem and Rep) are female. This will automatically result in a female senator
  \item The remaining 8 female senators face a male oponent. Their chances to win the election I code (for example for California) as \emph{pCal=0.99} which means that the female candidate (of whatever party) is this case has a 99\% chance of winning against her male oponent. These percentages can and will change. I take the ''win"-prognosis from 538.
  \item There are 3 ''open" elections. In Arizona the contest is between 2 women and this will result in a female senator. In Nevada and in Tennesse there is a female vs. male contest. I will treat those two in the same way as mentioned above
\end{itemize}

Conclusion: 

\begin{tabular}{ l r }
  not up for election & 10 \\
  up for election but female vs. female & 5 \\
  open but female vs. female & 1 \\
  \hline
  total certain female senator & 16 \\
  \hline
  \textbf{in contest with male oponent} & \textbf{10}
\end{tabular}

\section{2018-10-17}

\subsection{Model assuming that all elections are independent of each other}
This model uses a function \textit{round\_preserve\_sum}\sidenote{\url{https://stackoverflow.com/questions/32544646/round-vector-of-numerics-to-integer-while-preserving-their-sum}}.
<<echo=TRUE>>=
set.seed(2018)

# number of simulated elections
N <- 10000

# probability of a win for female candidate vs a man
pCal <- 0.99
pHaw <- 0.99
pMass <- 0.99
pMich <- 0.99
pMinn <- 0.99
pMissi <- 0.83
pMisso <- 0.55
pND <- 0.3
pNeva <- 0.47
pTenn <- 0.8

# simulation of the N elections using a binomial distribution
XCal <- rbinom(N, size=1, prob=pCal)
XHaw <- rbinom(N, size=1, prob=pHaw)
XMass <- rbinom(N, size=1, prob=pMass)
XMich <- rbinom(N, size=1, prob=pMich)
XMinn <- rbinom(N, size=1, prob=pMinn)
XMissi <- rbinom(N, size=1, prob=pMissi)
XMisso <- rbinom(N, size=1, prob=pMisso)
XND <- rbinom(N, size=1, prob=pND)
XNeva <- rbinom(N, size=1, prob=pNeva)
XTenn <- rbinom(N, size=1, prob=pTenn)

# assuming that all election results are independent of each other
Y <- XCal + XHaw + XMass + XMich +
  XMinn + XMissi + XMisso + 
  XND + XNeva + XTenn
elec.ind <- data.frame(Cal=XCal, Haw=XHaw, 
                       Mass=XMass, Mich=XMich, 
                       Minn=XMinn, Missi=XMissi, 
                       Misso=XMisso, ND=XND, 
                       Neva=XNeva, Tenn=XTenn, 
                       tot=Y)

# adding the 16 female senators we are sure about
elec.ind$tot <- elec.ind$tot + 16

# histogram
p1 <- ggplot(data=elec.ind, aes(x=tot)) +
  geom_histogram(aes(y=..density..), position="identity", binwidth=1, colour="Red", fill="Blue", alpha=0.25) +
  scale_x_continuous(breaks= seq(20, 26, by=1),limits = c(20, 27)) +
  scale_y_continuous(limits = c(0, 0.4)) +
  labs(title="Independent races", x="number of female senators", y="density") +
  JT.theme

# table of probabilities
elec.ind %>% count(tot) %>% mutate(perc=100*n/N) -> result.ind
result.ind$perc.round <- round_preserve_sum(result.ind$perc,0)
@

\begin{tabular}{ l r }
  19 or fewer & 0 \\
  20 & 0 \\
  21 & \Sexpr{result.ind$perc.round[1]} \\
  22 & \Sexpr{result.ind$perc.round[2]} \\
  23 & \Sexpr{result.ind$perc.round[3]} \\
  24 & \Sexpr{result.ind$perc.round[4]} \\
  25 or more & \Sexpr{result.ind$perc.round[5] + result.ind$perc.round[6]}
\end{tabular}

\subsection{Model with dependence between the of race results}
We assume here that if Heidi Heidkamp wins, this is an indication of a ''blue wave" that will lift McCaskill and Rosen to win. It does not affect those races where the probability of a win is higher than 70\%. This is important for the race in Tennessee because a ''blue wave" would improve the chances of Bredesen (male, Dem) and decrease the chances of Blackburn (female, Rep).

<<echo=TRUE>>=
# assuming some dependency: if Heidi Heidkamp wins, than this will lift up McCaskill and Rosen.
elec.dep <- elec.ind
for (i in 1:N) {
  if(elec.dep$ND[i] == 1) {
    elec.dep$Misso[i] <- 1
    elec.dep$Tenn[i] <- 1
  }
}
elec.dep$tot <- elec.dep$Cal + elec.dep$Haw + elec.dep$Mass + elec.dep$Mich + elec.dep$Minn + elec.dep$Missi + elec.dep$Misso + elec.dep$ND + elec.dep$Neva + elec.dep$Tenn

# adding the 16 female senators we are sure about
elec.dep$tot <- elec.dep$tot + 16 

# histogram
p2 <- ggplot(data=elec.dep, aes(x=tot)) +
  geom_histogram(aes(y=..density..), position="identity", binwidth=1, colour="Red", fill="Blue", alpha=0.25) +
  scale_x_continuous(breaks= seq(20, 26, by=1), limits = c(20, 27)) +
  scale_y_continuous(limits = c(0, 0.4)) +
  labs(title="Dependent races", x="number of female senators", y="density") +
  JT.theme

# table of probabilities
elec.dep %>% count(tot) %>% mutate(perc=100*n/N) -> result.dep
result.dep$perc.round <- round_preserve_sum(result.dep$perc,0)
@

<<label=Sim1,fig=TRUE,include=FALSE, echo=TRUE>>=
grid.arrange(p1, p2, nrow=1)
@

\begin{figure}
\includegraphics[width=0.85\textwidth]{WS-Sim1}
\caption{Probability of number of female senators elected}
\label{fig:Sim1}
\setfloatalignment{b}% forces caption to be bottom-aligned
\end{figure}

\begin{tabular}{ l r }
  19 or fewer & 0 \\
  20 & 0 \\
  21 & \Sexpr{result.dep$perc.round[1]} \\
  22 & \Sexpr{result.dep$perc.round[2]} \\
  23 & \Sexpr{result.dep$perc.round[3]} \\
  24 & \Sexpr{result.dep$perc.round[4]} \\
  25 or more & \Sexpr{result.dep$perc.round[5] + result.dep$perc.round[6]}
\end{tabular}

\subsection{Average of independent and dependent model}

<<>>=
result.avg <- (result.ind + result.dep)/2 
result.avg$perc.round <- round_preserve_sum(result.avg$perc,0)
@

\begin{tabular}{ l r }
  19 or fewer & 0 \\
  20 & 0 \\
  21 & \Sexpr{result.avg$perc.round[1]} \\
  22 & \Sexpr{result.avg$perc.round[2]} \\
  23 & \Sexpr{result.avg$perc.round[3]} \\
  24 & \Sexpr{result.avg$perc.round[4]} \\
  25 or more & \Sexpr{result.avg$perc.round[5] + result.avg$perc.round[6]} \\
\end{tabular}

\section{2018-10-18}

Same calculation but with the latest forecasts by 538 and the whole calculation within the function \textit{election(prob, N)}:

<<label=Simoct18,fig=TRUE,include=FALSE, echo=TRUE>>=
prob <- c(0.984, 0.999, 0.999, 0.994, 0.996, 0.83, 0.583, 0.343, 0.443, 0.747)
N <- 10000
election.avg1(prob, N) -> res
grid.arrange(election.ind(prob, N)$plot.ind, election.dep1(prob, N)$plot.dep, nrow=1)
@

\begin{figure}
\includegraphics[width=0.85\textwidth]{WS-Simoct18}
\caption{Probability of number of female senators elected}
\label{fig:Simoct18}
\setfloatalignment{b}% forces caption to be bottom-aligned
\end{figure}

\begin{tabular}{ l r }
  19 or fewer & \Sexpr{sum(res$result.avg$perc.round[res$result.avg$tot<=19])} \\
  20 & \Sexpr{res$result.avg$perc.round[res$result.avg$tot==20]} \\
  21 & \Sexpr{res$result.avg$perc.round[res$result.avg$tot==21]} \\
  22 & \Sexpr{res$result.avg$perc.round[res$result.avg$tot==22]} \\
  23 & \Sexpr{res$result.avg$perc.round[res$result.avg$tot==23]} \\
  24 & \Sexpr{res$result.avg$perc.round[res$result.avg$tot==24]} \\
  25 or more & \Sexpr{sum(res$result.avg$perc.round[res$result.avg$tot>=25])}
\end{tabular}

\section{2018-10-19}

Emil D quite rightly indicated that my ''dependency" model is flawed: a win for Heidkamp could suggest a ''blue wave" but that would not only affect Rosen and McCaskill (both Dems and women) but also the races in Mississippi (probably Espi (male, Dem) vs. Hyde-Smith (female, Rep)) and Tennesse (Bredesen (male, Dem) vs. Blackburn (female, Rep)).

Let us quantify the ''blue wave": if Heidkamp wins the probability of a win for a Democratic candidate will rise everywhere. It will not effect most of the female candidates who have probabilities of 99\% and more. So we only look at Nevada, Missouri, Mississippi and Tennessee. Let's give a 'Heidkamp Bonus" to the Democratic candidate in case of a Heidkamp win. For the female candidates this means that Nevada and Missouri go up HB\% and Mississippi and Tennesse go down HB\% (in the dependency model). Because the chances for two female senators go up and for two go down, the effect should more or less even out so that the dependency model will almost be the same as the independent model. Let's see:

Figure~\ref{fig:Simoct1905} and Table~\ref{tab:Simoct1905}

<<echo=FALSE>>=
election.dep2 <- function(prob, N, HD) { 
    set.seed(2018)
# start with independent races
  
# probability of a win for female candidate vs a man
  pCal <- prob[1]
  pHaw <- prob[2]
  pMass <- prob[3]
  pMich <- prob[4]
  pMinn <- prob[5]
  pMissi <- prob[6]
  pMisso <- prob[7]
  pND <- prob[8]
  pNeva <- prob[9]
  pTenn <- prob[10]

# simulation of the N elections using a binomial distribution
  XCal <- rbinom(N, size=1, prob=pCal)
  XHaw <- rbinom(N, size=1, prob=pHaw)
  XMass <- rbinom(N, size=1, prob=pMass)
  XMich <- rbinom(N, size=1, prob=pMich)
  XMinn <- rbinom(N, size=1, prob=pMinn)
  XMissi <- rbinom(N, size=1, prob=pMissi)
  XMisso <- rbinom(N, size=1, prob=pMisso)
  XND <- rbinom(N, size=1, prob=pND)
  XNeva <- rbinom(N, size=1, prob=pNeva)
  XTenn <- rbinom(N, size=1, prob=pTenn)

# assuming that all election results are independent of each other
  Y <- XCal + XHaw + XMass + XMich +
    XMinn + XMissi + XMisso + 
    XND + XNeva + XTenn
  elec.ind <- data.frame(Cal=XCal, Haw=XHaw, 
                       Mass=XMass, Mich=XMich, 
                       Minn=XMinn, Missi=XMissi, 
                       Misso=XMisso, ND=XND, 
                       Neva=XNeva, Tenn=XTenn, 
                       tot=Y)

# adding the 16 female senators we are sure about
  elec.ind$tot <- elec.ind$tot + 16
  
# assuming some dependency: if Heidi Heidkamp wins, Democratic candidates get a HB% bonus. This means that, in case of a Heidkamp win, the probability for Missouri and Nevada get +HB and Mississippi and Tennesse get -HB
  elec.dep <- elec.ind

# in case of a Heidkamp win we rerun Missouri, Nevada, Mississipi and Tennesse with adjusted percentages (up and down)
# using the Heidkamp Bonus HB
  for (i in 1:N) {
    if(elec.dep$ND[i] == 1) {
      elec.dep$Misso[i] <- rbinom(1, size=1, prob=(pMisso + HB))
      elec.dep$Neva[i] <- rbinom(1, size=1, prob=(pNeva + HB))
      elec.dep$Missi[i] <- rbinom(1, size=1, prob=(pMissi - HB))
      elec.dep$Tenn[i] <- rbinom(1, size=1, prob=(pTenn - HB))
    }
  }
  elec.dep$tot <- elec.dep$Cal + elec.dep$Haw + elec.dep$Mass +
    elec.dep$Mich + elec.dep$Minn + elec.dep$Missi +
    elec.dep$Misso + elec.dep$ND + elec.dep$Neva +
    elec.dep$Tenn

# adding the 16 female senators we are sure about
  elec.dep$tot <- elec.dep$tot + 16 

# histogram
  plot.fig <- ggplot(data=elec.dep, aes(x=tot)) +
    geom_histogram(aes(y=..density..), position="identity", binwidth=1, colour="Red", fill="Blue", alpha=0.25) +
    scale_x_continuous(breaks= seq(20, 26, by=1), limits = c(20, 27)) +
    scale_y_continuous(limits = c(0, 0.4)) +
    labs(title="Dependent races", x="number of female senators", y="density") +
    JT.theme

# table of probabilities
  elec.dep %>% count(tot) %>% mutate(perc=100*n/N) -> result.dep
  result.dep$perc.round <- round_preserve_sum(result.dep$perc,0)
  
 # output
  resultaat.dep <- list(result.dep=result.dep, plot.dep=plot.fig)
  return(resultaat.dep)
}
@ 

<<echo=FALSE>>=
election.avg2 <- function(prob, N, HB) { 
  ind <- election.ind(prob, N)$result.ind
  dep <- election.dep2(prob, N, HB)$result.dep
  resultaat.avg <- (ind + dep)/2 
  resultaat.avg$perc.round <- round_preserve_sum(resultaat.avg$perc,0)
  return(resultaat.avg)
}
@

<<label=Simoct1905,fig=TRUE,include=FALSE, echo=TRUE>>=
prob <- c(0.984, 0.999, 0.999, 0.994, 0.996, 0.83, 0.583, 0.343, 0.443, 0.747)
N <- 10000
HB <- 0.05
election.ind(prob, N) -> res.ind
election.dep2(prob, N, HB) -> res.dep2
election.avg2(prob, N, HB) -> res.avg2
grid.arrange(res.ind$plot.ind, res.dep2$plot.dep, nrow=1)
@

\begin{figure}
\includegraphics[width=0.85\textwidth]{WS-Simoct1905}
\caption{Probability of number of female senators elected: Heidkamp Bonus=5\%}
\label{fig:Simoct1905}
\setfloatalignment{b}% forces caption to be bottom-aligned
\end{figure}

\begin{tabular}{ l c c c}
 & independent & dependent & average \\
 \hline 
  19 or fewer & \Sexpr{sum(res.ind$result.ind$perc.round[res.ind$result.ind$tot<=19])} & \Sexpr{sum(res.dep2$result.dep$perc.round[res.dep2$result.dep$tot<=19])} & \Sexpr{sum(res.avg2$perc.round[res.avg2$tot<=19])} \\
  20 & \Sexpr{sum(res.ind$result.ind$perc.round[res.ind$result.ind$tot==20])} & \Sexpr{sum(res.dep2$result.dep$perc.round[res.dep2$result.dep$tot==20])} &\Sexpr{res.avg2$perc.round[res.avg2$tot==20]} \\
  21 & \Sexpr{sum(res.ind$result.ind$perc.round[res.ind$result.ind$tot==21])} & \Sexpr{sum(res.dep2$result.dep$perc.round[res.dep2$result.dep$tot==21])} &\Sexpr{res.avg2$perc.round[res.avg2$tot==21]} \\
  22 & \Sexpr{sum(res.ind$result.ind$perc.round[res.ind$result.ind$tot==22])} & \Sexpr{sum(res.dep2$result.dep$perc.round[res.dep2$result.dep$tot==22])} &\Sexpr{res.avg2$perc.round[res.avg2$tot==22]} \\
  23 & \Sexpr{sum(res.ind$result.ind$perc.round[res.ind$result.ind$tot==23])} & \Sexpr{sum(res.dep2$result.dep$perc.round[res.dep2$result.dep$tot==23])} &\Sexpr{res.avg2$perc.round[res.avg2$tot==23]} \\
  24 & \Sexpr{sum(res.ind$result.ind$perc.round[res.ind$result.ind$tot==24])} & \Sexpr{sum(res.dep2$result.dep$perc.round[res.dep2$result.dep$tot==24])} &\Sexpr{res.avg2$perc.round[res.avg2$tot==24]} \\
  25 or more & \Sexpr{sum(res.ind$result.ind$perc.round[res.ind$result.ind$tot>=25])} & \Sexpr{sum(res.dep2$result.dep$perc.round[res.dep2$result.dep$tot>=25])} &\Sexpr{sum(res.avg2$perc.round[res.avg2$tot>=25])}
\label{tab:Simoct1905}
\end{tabular}

Let's try a 10\% Heidkamp Bonus (Figure~\ref{fig:Simoct1910} and Table~\ref{tab:Simoct1910})

<<label=Simoct1910,fig=TRUE,include=FALSE, echo=TRUE>>=
prob <- c(0.984, 0.999, 0.999, 0.994, 0.996, 0.83, 0.583, 0.343, 0.443, 0.747)
N <- 10000
HB <- 0.1
election.ind(prob, N) -> res.ind
election.dep2(prob, N, HB) -> res.dep2
election.avg2(prob, N, HB) -> res.avg2
grid.arrange(res.ind$plot.ind, res.dep2$plot.dep, nrow=1)
@

\begin{figure}
\includegraphics[width=0.85\textwidth]{WS-Simoct1905}
\caption{Probability of number of female senators elected: Heidkamp Bonus=10\%}
\label{fig:Simoct1910}
\setfloatalignment{b}% forces caption to be bottom-aligned
\end{figure}

\begin{tabular}{ l c c c}
 & independent & dependent & average \\
 \hline 
  19 or fewer & \Sexpr{sum(res.ind$result.ind$perc.round[res.ind$result.ind$tot<=19])} & \Sexpr{sum(res.dep2$result.dep$perc.round[res.dep2$result.dep$tot<=19])} & \Sexpr{sum(res.avg2$perc.round[res.avg2$tot<=19])} \\
  20 & \Sexpr{sum(res.ind$result.ind$perc.round[res.ind$result.ind$tot==20])} & \Sexpr{sum(res.dep2$result.dep$perc.round[res.dep2$result.dep$tot==20])} &\Sexpr{res.avg2$perc.round[res.avg2$tot==20]} \\
  21 & \Sexpr{sum(res.ind$result.ind$perc.round[res.ind$result.ind$tot==21])} & \Sexpr{sum(res.dep2$result.dep$perc.round[res.dep2$result.dep$tot==21])} &\Sexpr{res.avg2$perc.round[res.avg2$tot==21]} \\
  22 & \Sexpr{sum(res.ind$result.ind$perc.round[res.ind$result.ind$tot==22])} & \Sexpr{sum(res.dep2$result.dep$perc.round[res.dep2$result.dep$tot==22])} &\Sexpr{res.avg2$perc.round[res.avg2$tot==22]} \\
  23 & \Sexpr{sum(res.ind$result.ind$perc.round[res.ind$result.ind$tot==23])} & \Sexpr{sum(res.dep2$result.dep$perc.round[res.dep2$result.dep$tot==23])} &\Sexpr{res.avg2$perc.round[res.avg2$tot==23]} \\
  24 & \Sexpr{sum(res.ind$result.ind$perc.round[res.ind$result.ind$tot==24])} & \Sexpr{sum(res.dep2$result.dep$perc.round[res.dep2$result.dep$tot==24])} &\Sexpr{res.avg2$perc.round[res.avg2$tot==24]} \\
  25 or more & \Sexpr{sum(res.ind$result.ind$perc.round[res.ind$result.ind$tot>=25])} & \Sexpr{sum(res.dep2$result.dep$perc.round[res.dep2$result.dep$tot>=25])} &\Sexpr{sum(res.avg2$perc.round[res.avg2$tot>=25])}
\label{tab:Simoct1910}
\end{tabular}

\textbf{Conclusion}: What was expected happened: the effects of the Heidkamp Bonus cancel each other out. We can stick with the independent model!


\newpage
\textbf{Thanks} \\
\medskip
R Core Team (2018). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/.
\medskip
<<>>=
sessionInfo()
@

\end{document}